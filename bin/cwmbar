#!/bin/sh

# Depends on lemonbar to actually draw the status on screen

# Colors
_colbg="#242424"                # Background color
_colfg1="%{F#458588}"           # Foreground color 1
_colfg2="%{F#dddddd}"           # Foreground color 2
_font="SF Pro Display:size=10"  # XFT support
_interval=2s                    # Update interval

# Show name of the group we're in
group() {
    _group=$(xprop -root 32c '\t$0' _NET_CURRENT_DESKTOP | cut -f 2)
    # Setup group names
    case "$_group" in
        1 ) group_name="1"
            ;;
        2 ) group_name="2"
            ;;
        3 ) group_name="3"
            ;;
        4 ) group_name="4"
            ;;
        5 ) group_name="5"
            ;;
        6 ) group_name="6"
            ;;
        7 ) group_name="7"
            ;;
        8 ) group_name="8"
            ;;
        9 ) group_name="9"
            ;;
    esac
    printf '%s' "%{B#458488}%{F#242424} $group_name %{B-}${_colfg1}"
}

# Show number of windows opened in total.
winnum() {
    _winnum=$(wmctrl -l | wc -l)
    printf '%s' "${_colfg1}[$_winnum]"
}

# Show window number/total number of windows and the name of currently
# focused window
win() {
    _wid=$(xprop -root 32x '\t$0' _NET_ACTIVE_WINDOW | cut -f 2)
    _win=$(xprop -id $_wid '\t$0' _NET_WM_NAME | awk -F '"' '{ print $2 }')
    if [ -z "$_win" ]; then
        printf " "
    else
        # Trim window title if it exceeds 75 chars
        if [ "${#_win}" -gt "75" ]; then
            printf '%.75s...' "${_colfg2}$_win"
        else
            printf '%s' "${_colfg2}$_win"
        fi
    fi
}

# Same as winnum(), but outputs to the right, with different formatting.
wnum() {
    _winnum=$(wmctrl -l | wc -l)
    printf '%s' "${_colfg1}wins: ${_colfg2}$_winnum"
}

# Battery status
batt() {
    _batt=$(cat /sys/class/power_supply/BAT0/capacity)
    if [ "${_batt}" -gt 75 ]; then
        echo "${_colfg1}B: ${_colfg2}${_batt}%"
    elif [ "${_batt}" -gt 50 ]; then
        echo "${_colfg1}B: ${_colfg2}${_batt}%"
    elif [ "${_batt}" -gt 25 ]; then
        echo "${_colfg1}B: ${_colfg2}${_batt}%"
    elif [ "${_batt}" -lt 25 ]; then
        echo "${_colfg1}B: ${_colfg2}${_batt}%"
    elif [ "${_batt}" -lt 10 ]; then
        echo "${_colfg1}B: ${_colfg2}${_batt}%"
    fi
}

# Show ram usage
ram() {
    mem=$(free -h | awk '/Mem:/ { print $3 }' | cut -f1 -d 'i')
    echo "${_colfg1}mem: ${_colfg2}$mem"
}

# Show cpu load
cpu() {
    read -r cpu a b c previdle rest < /proc/stat
    prevtotal=$((a+b+c+previdle))
    sleep 0.5
    read -r cpu a b c idle rest < /proc/stat
    total=$((a+b+c+idle))
    cpu=$((100*( (total-prevtotal) - (idle-previdle) ) / (total-prevtotal) ))
    echo "${_colfg1}cpu: ${_colfg2}${cpu}%"
}

# Network connection status
network() {
    conntype=$(ip route | awk '/default/ { print substr($5,1,1) }')
    if [ -z "$conntype" ]; then
        echo "${_colfg1}net: ${_colfg2}down"
    elif [ "$conntype" = "e" ]; then
        echo "${_colfg1}wired: ${_colfg2}up"
    elif [ "$conntype" = "w" ]; then
        echo "${_colfg1}wifi: ${_colfg2}up"
    fi
}

# Volume level for systems with pulseaudio. Replace $(volume_alsa) in
# status() in order to use this one.
volume_pa() {
    mute=$(pactl list sinks | awk '/Mute:/ { print $2 }')
    vol=$(pactl list sinks | grep Volume: | awk 'FNR == 1 { print $5 }' | cut -f1 -d '%')
    if [ "$mute" = "yes" ]; then
        echo "${_colfg1}vol: ${_colfg2}mute"
    else
        echo "${_colfg1}vol: ${_colfg2}${vol}%"
    fi
}

# Volume level for systems using pure Alsa. The default.
volume_alsa() {
    mono=$(amixer -M sget Master | grep Mono: | awk '{ print $2 }')
    if [ -z "$mono" ]; then
        mute=$(amixer -M sget Master | awk 'FNR == 6 { print $7 }' | sed 's/[][]//g')
        vol=$(amixer -M sget Master | awk 'FNR == 6 { print $5 }' | sed 's/[][]//g; s/%//g')
    else
        mute=$(amixer -M sget Master | awk 'FNR == 5 { print $6 }' | sed 's/[][]//g')
        vol=$(amixer -M sget Master | awk 'FNR == 5 { print $4 }' | sed 's/[][]//g; s/%//g')
    fi

    if [ "$mute" = "off" ]; then
        echo "${_colfg1}V: ${_colfg2}mute"
    else
        echo "${_colfg1}V: ${_colfg2}${vol}%"
    fi
}

# Date and time
clock() {
    dte_utc=$(date -u +"%k:%M")
    dte=$(date +"WW%V %a %e %b")
    time=$(date +"%l:%M %p")
    echo "${_colfg1}U: ${_colfg2}${dte_utc} ${_colfg1}$dte ${_colfg2}$time"
}

# Draw the status
status() {
    while true; do
        echo " %{l}$(group) $(winnum) $(win) %{r}$(batt) $(volume_alsa) $(clock) "
        sleep ${_interval}
    done
}

# Pipe status to lemonbar
status | lemonbar -p -d -B "${_colbg}" -f "${_font}"
