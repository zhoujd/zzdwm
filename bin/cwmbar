#!/bin/bash

# Common
_interval=0.05                      # Refresh interval

# Font
_font1="xft:SF Mono:size=10"        # XFT support font1
_font2="xft:SF Pro Display:size=10" # XFT support font2

# Colors
_colbg1="%{B#005577}"               # Background color 1
_colbg2="%{B#242424}"               # Background color 2
_colfg1="%{F#458588}"               # Foreground color 1
_colfg2="%{F#dddddd}"               # Foreground color 2
_colfg3="%{F#eeeeee}"               # Foreground color 3

# Show name of the group we're in
group() {
    _group=$(xprop -root 32c '\t$0' _NET_CURRENT_DESKTOP 2>/dev/null | cut -f 2)
    for i in $(seq 1 9); do
        if [ ${_group} -eq $i ]; then
            printf '%s' "${_colbg1}%{O8}${_colfg3}${i}%{O8}"
        else
            _winnumgroup=$(wmctrl -lp | awk '{print $2}' | grep -sc $i)
            if [ ${_winnumgroup} -eq 0 ]; then
                printf '%s' "${_colbg2}${_colfg2}%{A:wmctrl -s ${i}:}%{O8}${i}%{O8}%{A}"
            else
                printf '%s' "${_colbg2}${_colfg1}%{A:wmctrl -s ${i}:}%{O8}${i}%{O8}%{A}"
            fi
        fi
    done
}

# Show number of windows opened in total.
winnum() {
    _group=$(xprop -root 32c '\t$0' _NET_CURRENT_DESKTOP 2>/dev/null | cut -f 2)
    _gwin=($(wmctrl -lp | grep -s " ${_group} " | awk '{print $1}'))
    _gwinnum=$(wmctrl -lp | awk '{print $2}' | grep -sc ${_group})
    # get id of the focused window
    _active_win_id=$(xprop -root | grep '^_NET_ACTIVE_W' | awk -F'# 0x' '{print $2}')
    if [ "$_active_win_id" == "0" ]; then
        _active_win_id=""
    fi
    # get index of the focused window
    _gwinindex=0
    for i in "${!_gwin[@]}"; do
        if [[ "${_gwin[$i]}" == *"${_active_win_id}" ]]; then
            _gwinindex=$(expr $i + 1)
            break
        fi
    done
    printf '%s' "${_colbg2}${_colfg1}%{O8}[${_gwinindex}/${_gwinnum}]%{O8}"
}

# Show window title of currently focused window
wintitle() {
    _wid=$(xprop -root 32x '\t$0' _NET_ACTIVE_WINDOW 2>/dev/null | cut -f 2)
    _win=$(xprop -id $_wid '\t$0' _NET_WM_NAME 2>/dev/null | awk -F '"' '{ print $2 }')
    if [ -z "${_win}" ]; then
        printf '%-75s%2048s' "${_colbg2}${_colfg2}" "%{B-}"
    else
        printf '%-75s%2048s' "${_colbg1}${_colfg2}%{O8}${_win}%{O8}" "%{B-}"
    fi
}

# Battery status
battery() {
    _batt=$(cat /sys/class/power_supply/BAT0/capacity)
    if [ "${_batt}" -gt 75 ]; then
        echo "${_colfg2}B: ${_colfg2}${_batt}%"
    elif [ "${_batt}" -gt 50 ]; then
        echo "${_colfg2}B: ${_colfg2}${_batt}%"
    elif [ "${_batt}" -gt 25 ]; then
        echo "${_colfg2}B: ${_colfg2}${_batt}%"
    elif [ "${_batt}" -lt 25 ]; then
        echo "${_colfg2}B: ${_colfg2}${_batt}%"
    elif [ "${_batt}" -lt 10 ]; then
        echo "${_colfg2}B: ${_colfg2}${_batt}%"
    fi
}

# Show ram usage
ram() {
    mem=$(free -h | awk '/Mem:/ { print $3 }' | cut -f1 -d 'i')
    echo "${_colfg2}mem: ${_colfg2}$mem"
}

# Show cpu load
cpu() {
    read -r cpu a b c previdle rest < /proc/stat
    prevtotal=$((a+b+c+previdle))
    sleep 0.5
    read -r cpu a b c idle rest < /proc/stat
    total=$((a+b+c+idle))
    cpu=$((100*( (total-prevtotal) - (idle-previdle) ) / (total-prevtotal) ))
    echo "${_colfg2}cpu: ${_colfg2}${cpu}%"
}

# Network connection status
network() {
    conntype=$(ip route | awk '/default/ { print substr($5,1,1) }')
    if [ -z "$conntype" ]; then
        echo "${_colfg2}net: ${_colfg2}down"
    elif [ "$conntype" = "e" ]; then
        echo "${_colfg2}wired: ${_colfg2}up"
    elif [ "$conntype" = "w" ]; then
        echo "${_colfg2}wifi: ${_colfg2}up"
    fi
}

# Volume level for systems with pulseaudio. Replace $(volume_alsa) in
# status() in order to use this one.
volume_pa() {
    mute=$(pactl list sinks | awk '/Mute:/ { print $2 }')
    vol=$(pactl list sinks | grep Volume: | awk 'FNR == 1 { print $5 }' | cut -f1 -d '%')
    if [ "$mute" = "yes" ]; then
        echo "${_colfg2}vol: ${_colfg2}mute"
    else
        echo "${_colfg2}vol: ${_colfg2}${vol}%"
    fi
}

# Volume level for systems using pure Alsa. The default.
volume_alsa() {
    mono=$(amixer -M sget Master | grep Mono: | awk '{ print $2 }')
    if [ -z "$mono" ]; then
        mute=$(amixer -M sget Master | awk 'FNR == 6 { print $7 }' | sed 's/[][]//g')
        vol=$(amixer -M sget Master | awk 'FNR == 6 { print $5 }' | sed 's/[][]//g; s/%//g')
    else
        mute=$(amixer -M sget Master | awk 'FNR == 5 { print $6 }' | sed 's/[][]//g')
        vol=$(amixer -M sget Master | awk 'FNR == 5 { print $4 }' | sed 's/[][]//g; s/%//g')
    fi

    if [ "$mute" = "off" ]; then
        echo "${_colfg2}V: ${_colfg2}mute"
    else
        echo "${_colfg2}V: ${_colfg2}${vol}%"
    fi
}

# Date and time
clock() {
    dte_utc=$(date -u +"%k:%M")
    dte=$(date +"WW%-V %a %e %b")
    time=$(date +"%l:%M %p")
    echo "${_colfg2}U: ${_colfg2}${dte_utc} ${_colfg2}$dte ${_colfg2}$time"
}

# Draw the status
status() {
    while true; do
        _left="%{l}${_colbg2}%{O0}%{T1}$(group)$(winnum)${_colbg1}$(wintitle)%{T-}%{O0}%{B-}"
        _right="%{r}${_colbg2}%{O2}%{T2}$(battery) $(volume_alsa) $(clock)%{T-}%{O2}%{B-}"
        echo "${_left}${_right}"
        sleep ${_interval}
    done
}

# Pipe status to lemonbar
status | lemonbar -p -d -f "${_font1}" -f "${_font2}"
