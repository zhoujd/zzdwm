#!/bin/bash

gap=5
active=$(xdotool getactivewindow)
desktop=$(xdotool get_desktop)
windows=($(wmctrl -xl 2>/dev/null | grep -E "\s+${desktop}\s+" | \
               tr -s '[:blank:]' |  awk '{print $1}'))
mw=$(xwininfo -root | grep Width | cut -d: -f2 | tr -d ' ')
mh=$(xwininfo -root | grep Height | cut -d: -f2 | tr -d ' ')

focus() {
    local id=$1
    xdotool windowactivate $id
    xdotool windowraise $id
    xdotool windowfocus $id
}

prepare() {
    local id=$1
    wmctrl -ir $id -b remove,maximized_vert,maximized_horz
}

setwin() {
    local id=$1
    local pos_x=$2
    local pos_y=$3
    local size_x=$4
    local size_y=$5
    prepare $id
    xdotool windowmove $id $pos_x $pos_y
    xdotool windowsize $id $size_x $size_y
}

grid1() {
    local pos=0
    local cw=$((mw-gap*2))
    local ch=$((mh-gap*2))
    for win in ${windows[@]}; do
        setwin $win $gap $gap $cw $ch
        pos=$((pos+1))
    done
}

grid2() {
    local pos=0
    local cw=$(((mw-gap*3)/2))
    local ch=$((mh-gap*2))
    for win in ${windows[@]}; do
        case $((pos%2)) in
            0 ) setwin $win $gap $gap $cw $ch ;;
            1 ) setwin $win $(($cw+2*$gap)) $gap $cw $ch ;;
        esac
        pos=$((pos+1))
    done
}

grid4() {
    local pos=0
    local cw=$(((mw-gap*3)/2))
    local ch=$(((mh-gap*3)/2))
    for win in ${windows[@]}; do
        case $((pos%4)) in
            0 ) setwin $win $gap $gap $cw $ch ;;
            1 ) setwin $win $(($cw+2*$gap)) $gap $cw $ch ;;
            2 ) setwin $win $gap $(($ch+2*$gap)) $cw $ch ;;
            3 ) setwin $win $(($cw+2*$gap)) $(($ch+2*$gap)) $cw $ch ;;
        esac
        pos=$((pos+1))
    done
}

grid9() {
    local pos=0
    local cw=$(((mw-gap*4)/3))
    local ch=$(((mh-gap*4)/3))
    for win in ${windows[@]}; do
        case $((pos%9)) in
            0 ) setwin $win $gap $gap $cw $ch ;;
            1 ) setwin $win $(($cw+2*$gap)) $gap $cw $ch ;;
            2 ) setwin $win $((2*$cw+3*$gap)) $gap $cw $ch ;;
            3 ) setwin $win $gap $(($ch+2*$gap)) $cw $ch ;;
            4 ) setwin $win $(($cw+2*$gap)) $(($ch+2*$gap)) $cw $ch ;;
            5 ) setwin $win $((2*$cw+3*$gap)) $(($ch+2*$gap)) $cw $ch ;;
            6 ) setwin $win $gap $((2*$ch+3*$gap)) $cw $ch ;;
            7 ) setwin $win $(($cw+2*$gap)) $((2*$ch+3*$gap)) $cw $ch ;;
            8 ) setwin $win $((2*$cw+3*$gap)) $((2*$ch+3*$gap)) $cw $ch ;;
        esac
        pos=$((pos+1))
    done
}

auto() {
    local num=${#windows[@]}
    if [ $num -gt 4 ]; then
        grid9
    elif [ $num -gt 2 ]; then
        grid4
    elif [ $num -gt 1 ]; then
        grid2
    else
        grid1
    fi
}

main() {
    local kind=$1
    case $kind in
        1 ) grid1 ;;
        2 ) grid2 ;;
        4 ) grid4 ;;
        9 ) grid9 ;;
        * ) auto ;;
    esac
    focus $active
}

main $@
