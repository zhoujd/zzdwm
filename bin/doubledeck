#!/bin/bash
# Deck windows

gap=5

deck() {
    local act=$1
    local id=$2
    local mw=$(xwininfo -root | grep Width | cut -d: -f2 | tr -d ' ')
    local mh=$(xwininfo -root | grep Height | cut -d: -f2 | tr -d ' ')
    local fw=$(( $mw - $gap*2  ))
    local fh=$(( $mh - $gap*2  ))
    local hw=$(( ($mw - $gap*3) / 2 ))
    local hh=$(( ($mh - $gap*3) / 2 ))
    case $act in
        left )
            xdotool windowmove $id $gap $gap
            xdotool windowsize $id $hw $fh
            ;;
        top )
            xdotool windowmove $id $gap $gap
            xdotool windowsize $id $fw $hh
            ;;
        right )
            xdotool windowmove $id $(( $mw/2 + $gap/2 )) $gap
            xdotool windowsize $id $hw $fh
            ;;
        bottom )
            xdotool windowmove $id $gap $(( $mh/2 + $gap/2 ))
            xdotool windowsize $id $fw $hh
            ;;
        * )
            echo "Usage: $(basename $0) {left|top|right|bottom|--help|-h}"
            ;;
    esac
}

focus() {
    local id=$1
    xdotool windowactivate $id
    xdotool windowraise $id
    xdotool windowfocus $id
}

usage() {
    local app=$(basename $0)
    cat <<EOF
$app  {v|h}
v   -- doubledeck
h   -- zetadeck
EOF
}

main() {
    local kind=$1
    local desktop=$(xdotool get_desktop)
    local id=$(xdotool getactivewindow)
    local windows=($(wmctrl -xl 2>/dev/null | grep -E "\s+${desktop}\s+" | \
                         tr -s '[:blank:]' |  awk '{print $1}'))
    case $kind in
        v )  ## doubledeck
            for win in ${windows[@]}; do
                if [[ $win -ne $id ]]; then
                    deck right $win
                fi
            done
            deck left $id
            focus $id
            ;;
        h ) ## zetadeck
            for win in ${windows[@]}; do
                if [[ $win -ne $id ]]; then
                    deck bottom $win
                fi
            done
            deck top $id
            focus $id
            ;;
        * )
            usage
            ;;
    esac
}

main $@
