#!/bin/bash

# grabbing screen width and height
SIZE=`xdpyinfo | awk '/dimensions/{print $2}'`
SW=`echo $SIZE | cut -f1 -dx`
SH=`echo $SIZE | cut -f2 -dx`

focus() {
    local id=$1
    xdotool windowactivate $id
    xdotool windowraise $id
    xdotool windowfocus $id
}

prepare() {
    local id=$1
    wmctrl -ir $id -b remove,maximized_vert,maximized_horz
}

setwin() {
    local id=$1
    local pos_x=$2
    local pos_y=$3
    local size_x=$4
    local size_y=$5
    xdotool windowmove $id $pos_x $pos_y
    xdotool windowsize $id $size_x $size_y
}

cell() {
    local pos=$1
    local id=$2
    local mw=$(xwininfo -root | grep Width | cut -d: -f2 | tr -d ' ')
    local mh=$(xwininfo -root | grep Height | cut -d: -f2 | tr -d ' ')
    case $pos in
        0 )
            prepare $id
            setwin $id 0 0 $((mw/3)) $((mh/3))
            ;;
        1 )
            prepare $id
            setwin $id $((mw/3)) 0 $((mw/3)) $((mh/3))
            ;;
        2 )
            prepare $id
            setwin $id $((2*mw/3)) 0 $((mw/3)) $((mh/3))
            ;;
        3 )
            prepare $id
            setwin $id 0 $((mh/3))  $((mw/3)) $((mh/3))
            ;;
        4 )
            prepare $id
            setwin $id $((mw/3)) $((mh/3)) $((mw/3)) $((mh/3))
            ;;
        5 )
            prepare $id
            setwin $id $((2*mw/3)) $((mh/3)) $((mw/3)) $((mh/3))
            ;;
        6 )
            prepare $id
            setwin $id 0 $((2*mh/3)) $((mw/3)) $((mh/3))
            ;;
        7 )
            prepare $id
            setwin $id $((mw/3)) $((2*mh/3)) $((mw/3)) $((mh/3))
            ;;
        8 )
            prepare $id
            setwin $id $((2*mw/3)) $((2*mh/3)) $((mw/3)) $((mh/3))
            ;;
        * )
            echo "The $pos doesn't support"
            ;;
    esac
}

main() {
    local desktop=$(xdotool get_desktop)
    local id=$(xdotool getactivewindow)
    local windows=($(wmctrl -xl 2>/dev/null | grep -E "\s+${desktop}\s+" | \
                         tr -s '[:blank:]' |  awk '{print $1}'))
    local pos=0
    for win in ${windows[@]}; do
        case $((pos%9)) in
            0 ) cell 0 $win ;;
            1 ) cell 1 $win ;;
            2 ) cell 2 $win ;;
            3 ) cell 3 $win ;;
            4 ) cell 4 $win ;;
            5 ) cell 5 $win ;;
            6 ) cell 6 $win ;;
            7 ) cell 7 $win ;;
            8 ) cell 8 $win ;;
        esac
        pos=$((pos+1))
    done
}

main $@
