#!/bin/bash
# monocle windows

focus() {
    local id=$1
    xdotool windowactivate $id
    xdotool windowraise $id
    xdotool windowfocus $id
}

monocle() {
    local desktop=$(xdotool get_desktop)
    local id=$(xdotool getactivewindow)
    local windows=($(wmctrl -xl 2>/dev/null | grep -E "\s+${desktop}\s+" | \
                         tr -s '[:blank:]' |  awk '{print $1}'))
    for win in ${windows[@]}; do
        wmctrl -ir $win -b add,maximized_vert,maximized_horz
    done
    focus $id
}

float() {
    local desktop=$(xdotool get_desktop)
    local id=$(xdotool getactivewindow)
    local windows=($(wmctrl -xl 2>/dev/null | grep -E "\s+${desktop}\s+" | \
                         tr -s '[:blank:]' |  awk '{print $1}'))
    local interval=30
    local x=0
    local y=0
    for win in ${windows[@]}; do
        wmctrl -ir $win -b remove,maximized_vert,maximized_horz
        x=$(($x+$interval))
        y=$(($y+$interval))
        xdotool windowmove $win $x $y
    done
    focus $id
}

other() {
    local desktop=$(xdotool get_desktop)
    local id=$(xdotool getactivewindow)
    local windows=($(wmctrl -xl 2>/dev/null | grep -E "\s+${desktop}\s+" | \
                         tr -s '[:blank:]' |  awk '{print $1}'))
    for win in ${windows[@]}; do
        wmctrl -ir $win -b remove,maximized_vert,maximized_horz
    done
    focus $id
}

usage() {
    local app=$(basename $0)
    cat <<EOF
$app  {v|h}
m   -- monocle
f   -- float
o   -- other
EOF
}

main() {
    local kind=$1
    case $kind in
        m )
            monocle
            ;;
        f )
            float
            ;;
        o )
            other
            ;;
        * )
            usage
            ;;
    esac
}

main $@
